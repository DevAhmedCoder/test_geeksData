{"version":3,"sources":["Componenets/ErrorPage/index.js","Componenets/Firebase/firebase.js","Componenets/Firebase/context.js","Componenets/Firebase/index.js","Componenets/Logout/index.js","Componenets/Landing/index.js","Componenets/Login/index.js","Componenets/Password/index.js","App.js","index.js"],"names":["ErrorPage","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","loginUser","email","password","auth","signInWithEmailAndPassword","signoutUser","signOut","passwordReset","sendPasswordResetEmail","app","initializeApp","this","FirebaseContext","React","createContext","Logout","firebase","useContext","useState","checked","setchecked","useEffect","onChange","e","target","type","Landing","props","userSession","setuserSession","listener","onAuthStateChanged","user","history","push","Login","setemail","setpassword","btn","setbtn","error","seterror","message","onSubmit","preventDefault","then","catch","className","htmlFor","value","autoComplete","required","to","disabled","Password","success","setsuccess","setTimeout","App","exact","path","component","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.75b8766c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div>\r\n            Error PAGE\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage\r\n","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCv9OZGSEdUSQE_HWW5AgIkjLunxAqPG1g\",\r\n    authDomain: \"geeksdata-test.firebaseapp.com\",\r\n    databaseURL: \"https://geeksdata-test.firebaseio.com\",\r\n    projectId: \"geeksdata-test\",\r\n    storageBucket: \"geeksdata-test.appspot.com\",\r\n    messagingSenderId: \"1065746394956\",\r\n    appId: \"1:1065746394956:web:c7f430e45745be274ea9e9\"\r\n  };\r\n\r\nclass Firebase {\r\n\r\n    constructor(){\r\n        app.initializeApp(config);\r\n        this.auth=app.auth()\r\n    }\r\n\r\n// connexion\r\nloginUser=(email,password)=>\r\nthis.auth.signInWithEmailAndPassword(email,password);\r\n\r\n// deconnexion\r\nsignoutUser=()=>this.auth.signOut();\r\n\r\n// Forget Password\r\npasswordReset=(email)=>this.auth.sendPasswordResetEmail(email);\r\n\r\n}\r\n\r\nexport default Firebase;","import React from 'react';\r\n\r\nconst FirebaseContext= React.createContext(null);\r\n\r\nexport default FirebaseContext;","import Firebase from './firebase';\r\nimport FirebaseContext from './context';\r\n\r\nexport {FirebaseContext};\r\nexport default Firebase;","import React, { useState, useEffect,useContext } from 'react';\r\nimport {FirebaseContext} from '../Firebase';\r\n\r\nconst Logout = () => {\r\n\r\n    // Call Firebase\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    // check button Logout\r\n    const [checked, setchecked] = useState(false);\r\n\r\n    // Link with db\r\n    useEffect(() => {\r\n        (checked)&&firebase.signoutUser(); \r\n    }, [checked, firebase])\r\n\r\n    return (\r\n        <div>\r\n            <label>Logout</label>\r\n            <input onChange={(e)=>{setchecked(e.target.checked)}} type=\"checkbox\" checked={checked} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport Logout from '../Logout';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nconst Landing = (props) => {\r\n\r\n    // call db Firebase\r\n    const firebase = useContext(FirebaseContext)\r\n\r\n    // state user\r\n    const [userSession, setuserSession] = useState(null);\r\n\r\n    // Security page\r\n    useEffect(() => {\r\n        let listener= firebase.auth.onAuthStateChanged(user=>{\r\n            user?setuserSession(user):props.history.push('/');\r\n        })\r\n        return () => {\r\n            listener();\r\n        }\r\n    }, [])\r\n\r\n    return userSession === null ? (\r\n        <p>Please whait...</p>\r\n    ) :\r\n        (\r\n            <div>\r\n                <header>header</header>\r\n                <Logout />\r\n                <main>Main</main>\r\n                <footer>Footer</footer>\r\n            </div>\r\n        );\r\n}\r\nexport default Landing;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nconst Login = (props) => {\r\n\r\n    // context Firebase\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    // state\r\n    const [email, setemail] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [btn, setbtn] = useState(false);\r\n    const [error, seterror] = useState('')\r\n\r\n    // Button connexion\r\n    useEffect(() => {\r\n        if (password !== \"\" && email !== \"\") {\r\n            setbtn(true);\r\n        }\r\n        else if (btn) {\r\n            setbtn(false);\r\n        }\r\n    }, [password, email, btn]);\r\n\r\n    // Check with a db Firebase\r\n    const handelSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        firebase.loginUser(email, password)\r\n            .then(user => {\r\n                setemail('');\r\n                setpassword('');\r\n                props.history.push('/landing');\r\n            })\r\n            .catch(error => {\r\n                seterror(error);\r\n                setemail('');\r\n                setpassword('');\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {error !== \"\" && <span>{error.message}</span>}\r\n\r\n            <h2>Connexion</h2>\r\n            <form onSubmit={handelSubmit}>\r\n                <div className=\"\" >\r\n                    <label htmlFor=\"email\" >Login</label>\r\n                    <input onChange={e => setemail(e.target.value)} value={email} type=\"text\" autoComplete=\"off\" required />\r\n                </div>\r\n\r\n                <div className=\"\" >\r\n                    <label htmlFor=\"password\" >Password</label>\r\n                    <input onChange={e => setpassword(e.target.value)} value={password} type=\"password\" autoComplete=\"off\" required />\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to='/password'>I forget my password // my first connexion</Link>\r\n                </div>\r\n\r\n                {btn ? <button>Connexion</button> : <button disabled >Connexion</button>}\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nconst Password = (props) => {\r\n\r\n    // context Firebase\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    // State login\r\n    const [email, setemail] = useState(\"\");\r\n    const [success, setsuccess] = useState(null);\r\n    const [error, seterror] = useState(null);\r\n\r\n    // capture login and check with db\r\n    const handelSubmit = (e) => {\r\n        e.preventDefault();\r\n        firebase.passwordReset(email)\r\n        .then(()=>{\r\n            seterror(\"\");\r\n            setsuccess('Check your email please.');\r\n            setemail(\"\");\r\n            setTimeout(()=>{props.history.push('/')},3000);\r\n\r\n        })\r\n        .catch(error=>{\r\n            seterror(error);\r\n            setemail(\"\");\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {(error !== null) ? <span>{error.message}</span>:<span>{success}</span>}\r\n\r\n            <h2>Forgot password</h2>\r\n            <form onSubmit={handelSubmit}>\r\n                <div className=\"\" >\r\n                    <label htmlFor=\"email\" >Login</label>\r\n                    <input onChange={e => setemail(e.target.value)} value={email} type=\"text\" autoComplete=\"off\" required />\r\n                </div>\r\n                <button disabled={!email} >Send</button>\r\n            </form>\r\n            <Link to='/'>I know my password.</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Password\r\n","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ErrorPage from './Componenets/ErrorPage';\nimport Landing from './Componenets/Landing';\nimport Login from './Componenets/Login';\nimport Password from './Componenets/Password';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route path='/password' component={Password} />\n          <Route path='/landing' component={Landing} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Firebase, { FirebaseContext } from './Componenets/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}